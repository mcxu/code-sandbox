"""
Write a function that takes in a sorted array of integers as well as a target integer. 
The function should use the Binary Search algorithm to find if the target number is 
contained in the array and should return its index if it is, otherwise -1.

Sample input: [0, 1, 21, 33, 45, 45, 61, 71, 72, 73], 33
Sample output: 3
"""

class BinarySearch:
    '''
    Let n = number of elements in array
    Time complexity: O(log_2(n)), since each iteration involves searching 1/2 the previous range.
    Space complexity: O(1), since the additional space required does not scale up with num elements.
    '''
    def binarySearch(self, array, target):
        li = 0 # lower index
        ui = len(array)-1 # upper index
        
        while (li <= ui):
            print("li={}, ui={}".format(li, ui))
            medianInd = int((ui+li)/2)
            medianVal = array[medianInd]
            print(" medianInd={}, medianVal={}".format(medianInd, medianVal))
            if target <= medianVal:
                ui = medianInd-1
            else:
                li = medianInd+1
            
            if medianVal == target:
                return medianInd
            
        return -1
    
    def test_binarySearch(self):
        a = [0, 1, 21, 33, 45, 45, 61, 71, 72, 73]
        out = self.binarySearch(a, 33)
        print("out: ", out)
        
    def test_binarySearch2(self):
        a = [118, 273, 361, 475, 518, 573, 585, 664, 667, 690, 747, 803, 847, 1107, 1289, 1292, 1340, 1597, 1619, 1810, 1929, 2368, 2423, 2456, 2509, 2602, 2622, 2660, 2662, 2692, 2694, 2770, 2793, 2858, 3026, 3077, 3167, 3290, 3300, 3464, 3469, 3809, 3838, 4048, 4099, 4282, 4326, 4395, 4426, 4670, 4689, 4728, 4748, 5044, 5061, 5107, 5245, 5267, 5295, 5385, 5448, 5462, 5476, 5504, 5579, 5724, 5797, 5802, 5993, 6003, 6078, 6140, 6471, 6670, 6732, 6913, 6930, 6933, 7114, 7269, 7275, 7370, 7435, 7438, 7441, 7514, 7544, 7818, 7983, 8060, 8078, 8085, 8183, 8244, 8393, 8457, 8506, 8536, 8623, 8715, 9097, 9107, 9114, 9164, 9174, 9307, 9369, 9450, 9603, 9751, 9781, 9903, 9975, 10015, 10093, 10112, 10150, 10181, 10343, 10500, 10531, 10617, 10815, 10964, 11120, 11136, 11199, 11521, 11821, 11842, 11923, 11974, 11997, 12231, 12273, 12305, 12364, 12425, 12593, 12634, 12639, 12646, 12727, 12788, 12902, 12908, 12957, 13131, 13310, 13361, 13572, 13752, 13826, 13851, 13956, 13982, 14040, 14202, 14227, 14289, 14312, 14441, 14580, 14712, 14748, 15374, 15516, 15571, 15635, 15670, 15682, 15774, 15834, 15869, 15983, 15987, 16156, 16211, 16294, 16319, 16352, 16399, 16528, 16562, 16644, 16693, 16701, 16805, 16837, 16941, 16947, 17035, 17100, 17193, 17671, 18038, 18166, 18213, 18376, 18386, 18715, 18762, 18875, 18911, 19283, 19321, 19386, 19458, 19504, 19997, 20099, 20176, 20182, 20253, 20351, 20427, 20468, 20917, 21145, 21201, 21373, 21375, 21574, 21686, 21778, 21780, 21788, 21830, 21908, 22068, 22092, 22103, 22171, 22179, 22212, 22546, 22586, 22640, 22695, 22702, 22746, 22797, 22811, 22819, 22893, 22947, 23089, 23178, 23199, 23283, 23478, 23525, 23613, 23686, 23697, 23767, 23984, 24095, 24220, 24401, 24660, 24860, 24864, 24986, 25255, 25411, 25487, 25523, 25544, 25596, 25674, 25719, 26043, 26111, 26338, 26341, 26535, 26547, 26622, 26716, 27130, 27132, 27147, 27185, 27203, 27461, 27621, 27861, 28124, 28245, 28257, 28259, 28473, 28698, 29006, 29167, 29293, 29311, 29333, 29763, 29781, 29821, 29901, 29907, 30013, 30041, 30071, 30192, 30301, 30334, 30369, 30540, 30603, 30605, 30697, 30974, 31003, 31082, 31088, 31112, 31135, 31142, 31169, 31217, 31362, 31411, 31441, 31463, 31537, 31569, 31830, 31941, 32015, 32112, 32164, 32324, 32374, 32530, 32699, 32860, 33039, 33486, 33854, 33867, 34040, 34137, 34151, 34181, 34592, 34599, 34604, 34661, 34685, 34724, 34848, 34865, 34871, 34910, 35102, 35114, 35149, 35162, 35217, 35298, 35540, 35551, 35622, 35631, 35887, 35981, 36410, 36460, 36467, 36541, 36627, 36806, 37382, 37432, 37478, 37545, 37643, 37765, 37905, 37916, 38008, 38394, 38458, 38459, 38564, 38619, 38914, 39091, 39284, 39365, 39444, 39750, 39827, 39991, 40003, 40023, 40128, 40151, 40274, 40580, 40634, 40661, 40678, 40716, 40797, 40887, 41003, 41151, 41276, 41311, 41368, 41370, 41574, 41596, 41607, 41674, 41687, 41933, 42014, 42152, 42601, 42674, 42794, 42819, 42853, 42922, 43051, 43072, 43130, 43302, 43313, 43368, 43844, 43885, 44114, 44152, 44185, 44199, 44221, 44285, 44334, 44347, 44421, 44523, 44601, 44615, 44771, 44944, 45014, 45095, 45213, 45390, 45397, 45492, 46019, 46111, 46177, 46288, 46352, 46421, 46422, 46433, 46512, 46523, 46560, 46598, 46600, 46606, 46844, 47240, 47426, 47863, 47963, 48077, 48252, 48292, 48306, 48722, 48757, 49196, 49333, 49364, 49542, 49612, 49840, 49843, 49850, 49877, 50018, 50084, 50095, 50189, 50206, 50219, 50333, 50400, 50426, 50775, 50924, 50948, 50970, 51061, 51130, 51204, 51261, 51314, 51475, 51603, 51677, 51704, 51875, 51877, 51941, 52229, 52272, 52551, 52577, 52598, 52680, 52765, 52856, 52938, 53089, 53218, 53595, 53993, 54025, 54053, 54155, 54189, 54392, 54463, 54583, 54639, 54667, 54793, 55210, 55219, 55857, 55955, 56131, 56234, 56278, 56280, 56313, 56372, 56515, 56575, 56621, 56644, 56696, 56861, 56867, 56875, 57272, 57285, 57333, 57479, 57575, 57625, 57677, 57898, 57944, 58034, 58042, 58151, 58216, 58244, 58419, 58644, 58713, 58857, 59010, 59143, 59149, 59471, 59781, 59850, 59917, 59975, 60004, 60287, 60370, 60389, 60514, 60563, 60634, 60669, 60760, 60842, 60985, 61027, 61029, 61158, 61171, 61210, 61313, 61575, 61691, 61693, 61768, 61947, 62040, 62208, 62242, 62326, 62797, 62846, 62945, 62956, 63073, 63094, 63200, 63281, 63446, 63555, 63585, 63615, 63687, 63723, 63749, 63788, 63851, 63932, 63991, 64052, 64057, 64105, 64188, 64262, 64303, 64371, 64396, 64559, 64622, 64854, 64873, 65089, 65100, 65282, 65311, 65482, 65563, 65634, 65733, 65764, 66075, 66180, 66252, 66359, 66458, 66551, 66671, 66676, 66806, 67124, 67131, 67690, 67887, 68076, 68152, 68157, 68167, 68286, 68331, 68333, 68340, 68411, 68526, 68709, 68869, 69015, 69039, 69153, 69247, 69252, 69354, 69391, 69409, 69442, 69492, 69654, 70018, 70063, 70143, 70153, 70179, 70234, 70280, 70295, 70307, 70757, 70774, 70805, 70909, 70925, 71032, 71105, 71108, 71116, 71119, 71169, 71222, 71287, 71502, 71704, 71742, 71776, 71854, 71941, 72060, 72151, 72170, 72279, 72404, 72659, 72826, 72893, 73016, 73031, 73330, 73462, 73747, 73865, 73982, 74097, 74123, 74143, 74198, 74199, 74319, 74367, 74736, 74894, 74942, 75069, 75162, 75187, 75374, 75445, 75657, 75716, 75731, 75864, 75919, 75992, 76205, 76317, 76489, 76846, 76926, 76965, 77031, 77036, 77108, 77197, 77215, 77320, 77328, 77629, 77645, 77811, 77813, 77931, 78049, 78079, 78107, 78159, 78177, 78478, 78672, 78804, 78970, 79083, 79135, 79403, 79554, 79587, 79873, 79919, 79935, 79959, 80118, 80173, 80332, 80469, 80508, 80534, 80669, 80744, 80767, 80815, 80865, 80874, 81089, 81115, 81196, 81255, 81318, 81401, 82060, 82236, 82245, 82280, 82358, 82643, 82934, 83199, 83476, 83532, 83705, 83914, 83927, 83986, 84009, 84113, 84140, 84162, 84278, 84379, 84492, 84595, 84676, 84938, 85092, 85096, 85551, 85558, 85810, 85988, 86052, 86065, 86109, 86117, 86345, 86357, 86511, 86544, 86576, 86638, 86655, 86759, 86772, 86781, 86848, 86859, 87102, 87300, 87329, 87392, 87404, 87470, 87492, 87530, 87533, 87547, 87563, 87984, 88000, 88060, 88361, 88369, 88401, 88419, 88441, 88449, 88497, 88543, 88585, 88606, 88636, 88653, 88784, 88790, 88828, 88868, 89034, 89084, 89247, 89330, 89369, 89391, 89451, 89643, 89652, 89771, 89854, 90038, 90126, 90277, 90352, 90461, 90531, 90707, 90943, 90967, 91062, 91078, 91104, 91174, 91264, 91386, 91464, 91653, 91729, 91763, 91857, 91878, 91984, 92090, 92093, 92157, 92410, 92436, 92580, 92722, 92769, 92938, 93074, 93141, 93147, 93260, 93552, 93666, 93683, 93686, 93826, 93924, 93956, 94234, 94362, 94453, 94513, 94567, 94685, 95015, 95238, 95274, 95363, 95397, 95408, 95474, 95510, 95525, 95571, 95574, 95717, 95727, 95737, 95964, 96140, 96270, 96274, 96276, 96324, 96342, 96348, 96397, 96418, 96522, 96750, 97053, 97359, 97562, 97575, 97596, 97634, 97752, 97764, 97863, 97939, 98037, 98051, 98173, 98229, 98469, 98577, 98589, 98693, 98745, 98855, 98896, 98997, 99017, 99114, 99196, 99229, 99310, 99437, 99488, 99570, 99712, 99783, 99870, 99882, 99900]
        out = self.binarySearch(a, 50189)
        print("out:", out)

    def test_binarySearch3(self):
        a = [0, 1, 21, 33, 45, 45, 61, 71, 72, 74]
        out = self.binarySearch(a, 74)
        print("out: ", out)
        
def main():
    bs = BinarySearch()
    #bs.test_binarySearch()
    #bs.test_binarySearch2()
    bs.test_binarySearch3()

if __name__ == "__main__":
    main()