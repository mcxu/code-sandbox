{
    "editor.fontSize" : 13,
    "python.pythonPath": "C:\\Python\\Python37\\python.exe",
    "java.project.referencedLibraries": [
        "C:\\SWTools\\junit\\*.jar"
    ],

    "python.linting.pylintEnabled": true,
    "python.autoComplete.extraPaths": [".\\PythonSandbox\\src"],

    // Controls if quick suggestions should show up while typing
    "editor.quickSuggestions": {
        "other": false,
        "comments": false,
        "strings": false
    },

    // Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.
    "editor.acceptSuggestionOnCommitCharacter": false,

    // Controls if suggestions should be accepted on 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions. The value 'smart' means only accept a suggestion with Enter when it makes a textual change
    "editor.acceptSuggestionOnEnter": "on",

    // Controls the delay in ms after which quick suggestions will show up.
    "editor.quickSuggestionsDelay": 10,

    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": false,

    // Controls if pressing tab inserts the best suggestion and if tab cycles through other suggestions
    "editor.tabCompletion": "on",

    // Controls whether sorting favours words that appear close to the cursor
    "editor.suggest.localityBonus": false,

    // Controls how suggestions are pre-selected when showing the suggest list
    "editor.suggestSelection": "recentlyUsed",

    // Enable word based suggestions
    "editor.wordBasedSuggestions": false,

    // Enable parameter hints
    "editor.parameterHints.enabled": false,
    "java.dependency.packagePresentation": "hierarchical",
    "python.linting.enabled": false,
    "python.analysis.extraPaths": [
        ".\\PythonSandbox\\src"
    ]
}